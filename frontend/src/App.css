/* frontend/src/App.css */

/* Remove .App and .App-link if not used directly elsewhere, or simplify */
.App {
  /* Potentially remove or simplify if App.js doesn't use it directly for layout */
}

/* Login Page Specific Styles */
.Login-page-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  padding: 20px;
  background-color: transparent; /* Let body gradient show through */
}

.Login-form-container {
  background-color: var(--bg-content);
  padding: 32px 40px;
  border-radius: var(--radius-xlarge);
  box-shadow: var(--shadow-elevation-high);
  width: 100%;
  max-width: 400px;
  text-align: center;
}

.Login-form-container img {
  /* Already has inline style, but we can ensure margin if needed */
  /* width: 100px; marginBottom: 20px; */
}

.Login-form-container h1 {
  color: var(--text-heading);
  margin-top: 10px; /* Space below logo if logo is directly above */
  margin-bottom: 30px; /* Increased space below title */
  font-size: 28px;
}

/* Target the divs wrapping the input fields for spacing */
.Login-form-container form > div {
  margin-bottom: 16px; /* Space between input field groups */
}

.Login-form-container .Form-group {
  margin-bottom: 20px;
  text-align: left;
}

.Login-form-container label {
  display: block;
  margin-bottom: 8px;
  font-weight: 500;
  color: var(--text-secondary);
}

.Login-form-container input[type="text"],
.Login-form-container input[type="password"] {
  width: 100%;
  box-sizing: border-box;
  /* General input styles are in index.css */
  padding: 12px 15px; /* Ensure consistent padding */
  background-color: var(--bg-input); /* Ensure themed bg */
  color: var(--text-primary); /* Ensure themed text color */
  border: 1px solid var(--border-color-input); /* Ensure themed border */
  border-radius: var(--radius-medium); /* Consistent radius */
}

.Login-form-container .Form-actions button, /* If Form-actions class is used */
.Login-form-container form > button[type="submit"] { /* Or direct submit button */
  width: 100%;
  padding: 12px 20px;
  font-size: 16px;
  background-color: var(--btn-primary-bg);
  color: var(--btn-primary-text);
  border: none;
  border-radius: var(--radius-medium);
  cursor: pointer;
  transition: background-color var(--transition-fast);
  margin-top: 24px; /* Increased space above the button */
}

.Login-form-container .Form-actions button:hover,
.Login-form-container form > button[type="submit"]:hover {
  background-color: var(--btn-primary-hover-bg);
}

.Login-form-container .Error-message,
.Login-form-container .Error-message-login { /* Covering both possible class names */
  color: var(--text-error);
  background-color: color-mix(in srgb, var(--text-error) 15%, transparent);
  border: 1px solid color-mix(in srgb, var(--text-error) 40%, transparent);
  padding: 10px;
  border-radius: var(--radius-medium);
  margin-bottom: 20px; /* Space below error message if it appears above form elements */
  /* margin-top: 15px; Alternative if error is below inputs */
  text-align: center;
  font-size: 0.9em;
  display: flex; /* For icon alignment */
  align-items: center;
  justify-content: center;
}

/* Main Application Layout */
.App-shell {
  display: flex;
  flex-direction: column; 
  height: 100vh;
  /* background-color: var(--bg-page); Let body gradient handle this */
  color: var(--text-primary);
}

.Layout-body {
  display: flex;
  flex-grow: 1; /* Allows this container to fill the App-shell height */
  padding: 24px; 
  gap: 24px; 
  background-color: transparent; /* Ensure body gradient shows */
  align-items: stretch; /* Critical for equal height children */
  box-sizing: border-box;
  /* Remove fixed height calc if it causes issues, flex-grow should handle it */
}

.Floating-sidebar {
  width: 88px;
  min-width: 88px;
  background-color: var(--sidebar-bg);
  color: var(--sidebar-text-color);
  padding: 20px 12px;
  border-radius: var(--radius-large);
  box-shadow: var(--shadow-elevation-medium);
  display: flex;
  flex-direction: column;
  align-items: center; 
  transition: var(--transition-medium);
  /* No fixed height, should stretch with Layout-body */
}

.Sidebar-top-actions {
  margin-bottom: 20px;
}

.User-profile-icon {
  width: 56px !important; 
  height: 56px !important;
  background-color: var(--bg-accent); 
}
.User-profile-icon:hover {
   background-color: var(--text-accent) !important; 
   color: var(--text-on-accent) !important;
}
.User-profile-icon.active { 
    box-shadow: 0 0 0 2px var(--text-accent); 
}

.Floating-sidebar nav {
  flex-grow: 1; /* Allows nav to push bottom actions down */
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
}

.Floating-sidebar nav ul {
  list-style-type: none;
  padding: 0;
  margin: 0;
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 4px;
}

.Floating-sidebar nav li {
  display: flex; 
  justify-content: center; 
  width: 100%; 
}

.Floating-sidebar .Sidebar-icon {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 52px; 
  height: 52px;
  border-radius: var(--radius-large); 
  color: var(--sidebar-icon-color);
  background-color: transparent;
  transition: var(--transition-fast);
  cursor: pointer;
  margin: 0 auto; 
}

.Floating-sidebar .Sidebar-icon:hover {
  background-color: var(--bg-accent);
  color: var(--text-accent);
}

.Floating-sidebar .Sidebar-icon.active {
  background-color: var(--sidebar-icon-active-bg);
  color: var(--sidebar-icon-active-color);
}

.Floating-sidebar .Sidebar-icon svg {
  width: 24px; 
  height: 24px;
}

.Floating-sidebar .Sidebar-bottom-actions {
  margin-top: auto; /* Pushes to the bottom correctly if nav has flex-grow */
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 4px; 
  padding-bottom: 0; 
  width: 100%; 
}

.Main-content-area {
  flex-grow: 1; /* Takes remaining space */
  display: flex;
  flex-direction: column; 
  background-color: var(--bg-content);
  border-radius: var(--radius-large);
  box-shadow: var(--shadow-elevation-low); 
  padding: 24px;
  overflow-y: auto; /* Allows content to scroll */
  /* No fixed height, should stretch with Layout-body */
}

.Main-content-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 24px; 
  padding-bottom: 16px; /* Add some padding below header content */
  border-bottom: 1px solid var(--border-primary); /* Subtle separator */
}

.Main-content-header-left {
  display: flex;
  flex-direction: column;
  gap: 4px; 
}

.Main-content-header-left .Breadcrumbs {
  font-size: 0.875rem;
  color: var(--text-secondary);
}

.Main-content-header-left .Breadcrumb-base,
.Main-content-header-left .Breadcrumb-separator,
.Main-content-header-left .Breadcrumb-current {
  display: inline-block;
}

.Main-content-header-left .Breadcrumb-base:hover {
  color: var(--text-accent);
  text-decoration: underline;
}

.Main-content-header-left .Breadcrumb-separator {
  margin: 0 6px;
}

.Main-content-header-left h1 {
  margin: 0;
  font-size: 1.75rem; 
  font-weight: 600;
  color: var(--text-heading);
}

.Main-content-header-right {
  display: flex;
  align-items: center;
  gap: 15px; 
}

.app-style-search {
  display: flex;
  align-items: center;
  background-color: var(--bg-accent); /* Slightly different from main bg-input, often a bit lighter/more contrasted with header */
  border-radius: var(--radius-medium);
  padding: 8px 12px;
  width: 280px; 
  border: 1px solid var(--border-secondary); /* Use a more subtle border, or none if bg is enough */
  /* box-shadow: var(--shadow-elevation-low); Consider removing or making very subtle */
}

.app-style-search svg {
  color: var(--text-secondary);
  margin-right: 8px;
  flex-shrink: 0; /* Prevent icon from shrinking */
}

.app-style-search input[type="text"] {
  background-color: transparent; /* Make input transparent to show container's bg */
  border: none; 
  color: var(--text-primary);
  font-size: 0.9rem;
  width: 100%;
  padding: 0; 
  outline: none; 
  box-shadow: none; 
}

.app-style-search input[type="text"]::placeholder {
  color: var(--text-tertiary);
}

/* Content Card Styling */
.Content-card {
  background-color: var(--bg-content);
  padding: 20px 24px; /* Consistent padding */
  border-radius: var(--radius-large);
  box-shadow: var(--shadow-elevation-medium);
  margin-bottom: 20px;
}

.Content-card:last-child {
  margin-bottom: 0; /* No margin for the last card */
}

.Content-card h2, .Content-card h3 {
  color: var(--text-heading);
  margin-bottom: 16px;
}

.Content-card p {
  margin: 12px 0;
  line-height: 1.7;
  color: var(--text-secondary);
}

.Content-card strong {
  color: var(--text-primary);
  font-weight: 500;
}

/* Dashboard Specific */
.Dashboard-overview-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr)); /* Adjusted minmax */
  gap: 20px;
}

.Dashboard-project-card {
  background-color: var(--bg-content); /* Changed to match Content-card */
  padding: 20px;
  border-radius: var(--radius-large); 
  box-shadow: var(--shadow-elevation-medium); /* Changed to match Content-card */
  cursor: pointer;
  transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
  border: none; /* Explicitly remove all borders */
}

.Dashboard-project-card:hover {
  transform: translateY(-3px);
  box-shadow: var(--shadow-elevation-medium);
}

.Dashboard-project-card h3 {
  color: var(--text-primary);
  margin-top: 0;
  margin-bottom: 10px;
  font-size: 18px;
}

.Dashboard-project-card p {
  color: var(--text-secondary);
  font-size: 14px;
  margin-bottom: 5px;
}

/* Form Specifics if not covered by Content-card */
.Form-container label {
  display: block;
  margin-bottom: 8px;
  font-weight: 500;
  color: var(--text-primary); /* Ensure good contrast for labels */
  font-size: 14px;
}

.Form-container input[type="text"],
.Form-container input[type="url"],
.Form-container textarea,
.Form-container select {
  width: 100%;
  margin-bottom: 20px;
}

.Form-container textarea {
  min-height: 100px;
  resize: vertical;
}

.Form-actions {
  display: flex;
  justify-content: flex-end;
  gap: 12px;
  margin-top: 25px;
}

.Form-actions button[type="submit"] {
  background-color: var(--btn-primary-bg);
  color: var(--btn-primary-text);
}
.Form-actions button[type="submit"]:hover {
  background-color: var(--btn-primary-hover-bg);
}

.Form-actions button.cancel-button {
  background-color: var(--btn-secondary-bg);
  color: var(--btn-secondary-text);
}
.Form-actions button.cancel-button:hover {
  background-color: var(--btn-secondary-hover-bg);
}

.Form-actions button.delete-button {
  background-color: var(--text-error); /* Using text-error for a red button */
  color: var(--text-on-accent); /* Assuming white/light text on error color */
  margin-right: auto; 
}
.Form-actions button.delete-button:hover {
  opacity: 0.85;
}

.Error-message-general {
  color: var(--text-error);
  background-color: color-mix(in srgb, var(--text-error) 15%, transparent);
  border: 1px solid color-mix(in srgb, var(--text-error) 40%, transparent);
  padding: 12px;
  border-radius: var(--radius-medium);
  margin-bottom: 20px;
  display: flex;
  align-items: center;
  gap: 8px;
  font-size: 14px;
}

/* Add Project Button in Sidebar (if still styled as a large button) */
/* This will likely become an icon button */
.Add-project-icon-button {
    /* Style as an icon button, similar to .Sidebar-icon */
    width: 48px;
    height: 48px;
    border-radius: var(--radius-medium);
    background-color: var(--btn-primary-bg);
    color: var(--btn-primary-text);
    display: flex;
    align-items: center;
    justify-content: center;
}
.Add-project-icon-button:hover {
    background-color: var(--btn-primary-hover-bg);
}

/* Remove old classes if no longer used by components after refactor */
/* e.g., .Project-details-container, .Project-form-container might merge into .Content-card */
/* .Add-project-button, .Logout-button, .Theme-toggler will need specific new styles for the icon sidebar */

/* Styling for the new Add Project button in Dashboard Overview Header */
.dashboard-add-project-button {
  background-color: var(--btn-primary-bg);
  color: var(--btn-primary-text);
  border: none;
  border-radius: var(--radius-medium);
  padding: 10px 18px; /* Adjust padding to match visual hierarchy */
  font-size: 0.9rem; /* Slightly smaller font if needed */
  font-weight: 500;
  display: flex;
  align-items: center;
  gap: 8px; /* Gap between icon and text */
  cursor: pointer;
  transition: background-color var(--transition-fast), transform var(--transition-fast);
  margin-left: auto; /* Push to the right of the Dashboard title */
}

.dashboard-add-project-button:hover {
  background-color: var(--btn-primary-hover-bg);
  transform: translateY(-1px);
}

.dashboard-add-project-button svg {
  /* Size is set inline, but can be controlled here if needed */
}

/* ProjectDetails.js specific styles for buttons */
.Status-buttons-container {
  display: flex;
  flex-wrap: wrap; /* Allow buttons to wrap on smaller screens */
  gap: 12px; /* Space between buttons */
  margin-top: 24px; /* Space above the button container */
  padding-top: 20px; /* Space above buttons, below notes */
  border-top: 1px solid var(--border-secondary); /* Separator line */
}

.status-button {
  padding: 10px 18px;
  border-radius: var(--radius-medium);
  border: 1px solid var(--border-button);
  background-color: var(--bg-button);
  color: var(--text-button);
  font-weight: 500;
  cursor: pointer;
  transition: background-color var(--transition-fast), border-color var(--transition-fast), color var(--transition-fast);
  display: flex;
  align-items: center;
  gap: 8px; /* Space between icon and text */
}

.status-button:hover {
  background-color: var(--bg-button-hover);
  border-color: var(--border-button-hover);
  color: var(--text-button-hover);
}

.status-button:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.status-button.current-status {
  background-color: var(--bg-button-active);
  color: var(--text-button-active);
  border-color: var(--border-button-active);
  font-weight: 600;
}

/* Specific styles for each status button to match their status colors */
.status-button.not-paid.current-status {
  background-color: var(--status-high-priority-bg);
  color: var(--status-high-priority-text);
  border-color: var(--status-high-priority-border);
}
.status-button.not-paid:not(.current-status):hover {
    background-color: color-mix(in srgb, var(--status-high-priority-bg) 80%, var(--bg-button-hover));
    color: var(--status-high-priority-text);
}

.status-button.partially-paid.current-status {
  background-color: var(--status-design-bg);
  color: var(--status-design-text);
  border-color: var(--status-design-border);
}
.status-button.partially-paid:not(.current-status):hover {
    background-color: color-mix(in srgb, var(--status-design-bg) 80%, var(--bg-button-hover));
    color: var(--status-design-text);
}

.status-button.fully-paid.current-status {
  background-color: var(--status-low-priority-bg);
  color: var(--status-low-priority-text);
  border-color: var(--status-low-priority-border);
}
.status-button.fully-paid:not(.current-status):hover {
    background-color: color-mix(in srgb, var(--status-low-priority-bg) 80%, var(--bg-button-hover));
    color: var(--status-low-priority-text);
}

/* Edit button specific style - can be more neutral or accent */
.status-button.edit-button {
  background-color: var(--btn-secondary-bg);
  color: var(--btn-secondary-text);
  border-color: var(--btn-secondary-border); /* Assuming you have or will add this variable */
}

.status-button.edit-button:hover {
  background-color: var(--btn-secondary-hover-bg);
  color: var(--btn-secondary-hover-text);
  border-color: var(--btn-secondary-hover-border); /* Assuming you have or will add this variable */
} 